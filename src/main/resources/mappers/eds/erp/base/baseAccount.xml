<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springboot.myapp.eds.erp.controller.base.baseAccountMapper">

    <select id="selectAccountList"  resultType="com.springboot.myapp.eds.erp.vo.base.baseAccountListVO">
        SELECT
            U1.corpCd,
            U1.accountCd,
            U1.pareAccountCd,
            U1.accountNm,
            U1.financialCd,
            U1.pareFinancialCd,
            U1.financialNm,
            U1.useYn,
            U1.note1,
            U1.note2
        FROM tb_base_account_list U1
        WHERE U1.corpCd=#{corpCd}
        <if test="accountNm != null and !accountNm.equals('')">
            AND ( U1.accountNm like '%' #{accountNm} '%' or U1.accountCd like '%' #{accountNm} '%')
        </if>
        <if test="useYn != null and !useYn.equals('')">
            AND U1.useYn = #{useYn}
        </if>
    </select>

    <select id="selectAccountListPop"  resultType="com.springboot.myapp.eds.erp.vo.base.baseAccountListVO">
        SELECT /* selectAccountListPop */
            T1.corpCd,
            T1.accountCd,
            T1.pareAccountCd,
            T1.accountNm,
            T1.financialCd,
            T1.pareFinancialCd,
            T1.financialNm,
            T1.useYn,
            T1.note1,
            T1.note2
        FROM TB_BASE_ACCOUNT_LIST T1
        WHERE T1.corpCd = #{corpCd}

        <if test="accountNm != null and !accountNm.equals('')">
            AND ( U1.accountNm like '%' #{accountNm} '%' or U1.accountCd like '%' #{accountNm} '%')
        </if>
        <if test="useYn != null and !useYn.equals('')">
            AND T1.useYn = #{useYn}
        </if>
        ORDER BY T1.accountCd ASC
    </select>

    <insert id="insertAccountList" parameterType="hashMap">
        INSERT INTO /* insertAccountList */
            TB_BASE_ACCOUNT_LIST(
                         corpCd
                        ,accountCd
                        ,accountNm
                        ,pareAccountCd
                        ,financialCd
                        ,pareFinancialCd
                        ,financialNm
                        ,note1
                        ,note2
                        ,useYn
                        ,inpId
                        ,inpDttm
                        ,updId
                        ,updDttm
        )
        SELECT
            #{corpCd}
             ,#{accountCd}
             ,#{accountNm}
             ,#{pareAccountCd}
             ,#{financialCd}
             ,#{pareFinancialCd}
             ,#{financialNm}
             ,#{note1}
             ,#{note2}
             ,#{useYn}
             ,#{userId}
             ,now()
             ,#{userId}
             ,now()
    </insert>

    <update id="updateAccountList" parameterType="hashMap">
        UPDATE TB_BASE_ACCOUNT_LIST /* updateAccountList */
        SET accountNm = #{accountNm}
            ,financialCd=#{financialCd}
            ,financialNm=#{financialNm}
            ,note1 = #{note1}
            ,note2 = #{note2}
            ,updId = #{userId}
            ,useYn = #{useYn}
            ,updDttm = now()
        WHERE corpCd = #{corpCd}
          AND accountCd = #{accountCd}
    </update>

    <delete id="deleteAccountList"  parameterType="hashMap">
        DELETE /* deleteAccountList */
        FROM TB_BASE_ACCOUNT_LIST
        WHERE corpCd = #{corpCd}
          AND accountCd = #{accountCd}
    </delete>
</mapper>
